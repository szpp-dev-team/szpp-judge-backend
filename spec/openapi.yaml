openapi: 3.0.3
info:
  title: szpp-judge
  version: 1.0.0

paths:
  /auth/signin:
    post:
      summary: サインイン
      description: サインインをします
      parameters: []
      requestBody: # リクエストボディ
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SigninPayload'
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SigninResponse'
        '401':
          description: 'ID かパスワードが違うよー'
        '500':
          description: 'エラーだよー'

  /users:
    post:
      summary: register user
      description: 新規ユーザーを登録する
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterUserPayload'
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '500':
          description: 'エラーだよー'

  /users/{user_id}:
    get:
      summary: get user
      description: ユーザー情報を取得する
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '404':
          description: 'ユーザーが見つからない'
        '500':
          description: 'エラーだよー'

  /tasks/{task_id}/testcases/{testcase_id}:
    get:
      summary: get specify testcase
      description: テストケースの詳細を取得する
      parameters:
        - name: task_id
          in: path
          required: true
          schema:
            type: integer
        - name: testcase_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestcaseResponse'

  /tasks/{task_id}/testcases:
    parameters:
      - name: task_id
        in: path
        required: true
        schema:
          type: integer
    post:
      summary: register new testcase
      description: 問題にテストケースを追加する
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestcaseResponse'

    get:
      summary: get testcases
      description: 問題に紐づくテストケースの一覧を取得する
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TestcaseInfoResponse'

components:
  schemas:
    SigninPayload:
      type: object
      required: # 必須フィールド
        - username
        - password
      properties:
        username:
          type: string
        password:
          type: string

    SigninResponse:
      type: object
      properties:
        userResponse:
          $ref: '#/components/schemas/UserResponse'
        token:
          type: string

    UserResponse:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        displayName:
          type: string
        created_at:
          type: string
          format: datetime
        updated_at:
          type: string
          format: datetime
      required:
        - id
        - username
        - created_at

    RegisterUserPayload:
      type: object
      required:
        - username
        - password
        - displayName
      properties:
        username:
          type: string
        password:
          type: string
        displayName:
          type: string

    TestcaseResponse:
      type: object
      required:
        - id
        - name
        - task_id
        - input
        - output
        - created_at
      properties:
        id:
          type: integer
        name:
          type: string
        task_id:
          type: integer
        input:
          type: string
        output:
          type: string
        created_at:
          type: string
          format: datetime
        updated_at:
          type: string
          format: datetime

    TestcaseInfoResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        task_id:
          type: integer
